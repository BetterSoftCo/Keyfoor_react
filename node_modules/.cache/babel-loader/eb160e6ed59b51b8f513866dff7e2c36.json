{"ast":null,"code":"import _classCallCheck from \"/Users/psycho/Documents/code/betterSoftCo/Keyfoor_react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/psycho/Documents/code/betterSoftCo/Keyfoor_react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"/Users/psycho/Documents/code/betterSoftCo/Keyfoor_react/node_modules/@babel/runtime/regenerator/index.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { httpGet, httpPost } from \"../utils/http_interceptor\";\nexport var ProductDataSourceType;\n\n(function (ProductDataSourceType) {\n  ProductDataSourceType[\"products\"] = \"Product\";\n  ProductDataSourceType[\"tutorials\"] = \"Tutorial\";\n  ProductDataSourceType[\"projects\"] = \"Project\";\n  ProductDataSourceType[\"companies\"] = \"Company\";\n  ProductDataSourceType[\"tenders\"] = \"Tender\";\n  ProductDataSourceType[\"magazine\"] = \"Magazine\";\n  ProductDataSourceType[\"ads\"] = \"Ad\";\n  ProductDataSourceType[\"dailyPrice\"] = \"DailyPrice\";\n  ProductDataSourceType[\"job\"] = \"Job\";\n})(ProductDataSourceType || (ProductDataSourceType = {}));\n\nexport var ProductDataSource = /*#__PURE__*/function () {\n  function ProductDataSource(baseUrl, type) {\n    _classCallCheck(this, ProductDataSource);\n\n    this.baseUrl = baseUrl;\n    this.type = type;\n  }\n\n  _createClass(ProductDataSource, [{\n    key: \"create\",\n    value: function create(params, onResponse, onError) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return httpPost(\"\".concat(this.baseUrl, \"api/\").concat(this.type.toString()), params, function (response) {\n                  return onResponse(response);\n                }, function (response) {\n                  return onError(response);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"read\",\n    value: function read(onResponse, onError) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return httpGet(\"\".concat(this.baseUrl, \"api/\").concat(this.type.toString()), function (response) {\n                  return onResponse(response);\n                }, function (response) {\n                  return onError(response);\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"readById\",\n    value: function readById(id, onResponse, onError) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return httpGet(\"\".concat(this.baseUrl, \"api/\").concat(this.type.toString(), \"/\").concat(id), function (response) {\n                  return onResponse(response);\n                }, function (response) {\n                  return onError(response);\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n  }]);\n\n  return ProductDataSource;\n}();","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAQA,OAAR,EAAiBC,QAAjB,QAAgC,2BAAhC;AAGA,WAAYC,qBAAZ;;AAAA,WAAYA,qBAAZ,EAAiC;EAC7BA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;AACH,CAVD,EAAYA,qBAAqB,KAArBA,qBAAqB,MAAjC;;AAYA,WAAaC,iBAAb;EAII,2BAAYC,OAAZ,EAA6BC,IAA7B,EAAwD;IAAA;;IACpD,KAAKD,OAAL,GAAeA,OAAf;IACA,KAAKC,IAAL,GAAYA,IAAZ;EACH;;EAPL;IAAA;IAAA,OASU,gBAAOC,MAAP,EACOC,UADP,EAEOC,OAFP,EAE2C;;;;;;;gBAC7C,OAAMP,QAAQ,WACP,KAAKG,OADE,iBACY,KAAKC,IAAL,CAAUI,QAAV,EADZ,GAEVH,MAFU,EAGV,kBAAQ;kBAAA,OAAIC,UAAU,CAACG,QAAD,CAAd;gBAAA,CAHE,EAIV,kBAAQ;kBAAA,OAAIF,OAAO,CAACE,QAAD,CAAX;gBAAA,CAJE,CAAd;;;;;;;;;IAMH;EAlBL;IAAA;IAAA,OAoBU,cAAKH,UAAL,EACKC,OADL,EACyC;;;;;;;gBAC3C,OAAMR,OAAO,WAAI,KAAKI,OAAT,iBAAuB,KAAKC,IAAL,CAAUI,QAAV,EAAvB,GACT,kBAAQ;kBAAA,OAAIF,UAAU,CAACG,QAAD,CAAd;gBAAA,CADC,EAET,kBAAQ;kBAAA,OAAIF,OAAO,CAACE,QAAD,CAAX;gBAAA,CAFC,CAAb;;;;;;;;;IAIH;EA1BL;IAAA;IAAA,OA4BU,kBAASC,EAAT,EACSJ,UADT,EAESC,OAFT,EAE6C;;;;;;;gBAC/C,OAAMR,OAAO,WAAI,KAAKI,OAAT,iBAAuB,KAAKC,IAAL,CAAUI,QAAV,EAAvB,cAA+CE,EAA/C,GACT,kBAAQ;kBAAA,OAAIJ,UAAU,CAACG,QAAD,CAAd;gBAAA,CADC,EAET,kBAAQ;kBAAA,OAAIF,OAAO,CAACE,QAAD,CAAX;gBAAA,CAFC,CAAb;;;;;;;;;IAIH;EAnCL;;EAAA;AAAA","names":["httpGet","httpPost","ProductDataSourceType","ProductDataSource","baseUrl","type","params","onResponse","onError","toString","response","id"],"sources":["../../../src/data/product_datasource.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}